# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Namespace
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
    control-plane: controller-manager
  name: resource-group-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-sa
  namespace: resource-group-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-leader-election-role
  namespace: resource-group-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - configmaps/status
  verbs:
  - get
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-manager-role
rules:
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - kpt.dev
  resources:
  - resourcegroups
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - kpt.dev
  resources:
  - resourcegroups/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-leader-election-rolebinding
  namespace: resource-group-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: resource-group-leader-election-role
subjects:
- kind: ServiceAccount
  name: resource-group-sa
  namespace: resource-group-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: resource-group-manager-role
subjects:
- kind: ServiceAccount
  name: resource-group-sa
  namespace: resource-group-system
---
apiVersion: v1
data:
  otel-agent-config.yaml: |
    receivers:
      opencensus:
        endpoint: 0.0.0.0:55678
    exporters:
      opencensus:
        endpoint: otel-collector.config-management-monitoring:55678
        tls:
          insecure: true
    processors:
      batch:
      # Populate resource attributes from OTEL_RESOURCE_ATTRIBUTES env var and
      # the GCE metadata service, if available.
      resourcedetection:
        detectors: [env, gcp]
    service:
      pipelines:
        metrics:
          receivers: [opencensus]
          processors: [batch, resourcedetection]
          exporters: [opencensus]
kind: ConfigMap
metadata:
  labels:
    app: opentelemetry
    component: otel-agent
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
  name: resource-group-otel-agent
  namespace: resource-group-system
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    configmanagement.gke.io/arch: "csmr"
    configmanagement.gke.io/system: "true"
    control-plane: controller-manager
  name: resource-group-controller-manager
  namespace: resource-group-system
spec:
  replicas: 1
  selector:
    matchLabels:
      configmanagement.gke.io/arch: "csmr"
      configsync.gke.io/deployment-name: resource-group-controller-manager
      control-plane: controller-manager
  template:
    metadata:
      labels:
        configmanagement.gke.io/arch: "csmr"
        configsync.gke.io/deployment-name: resource-group-controller-manager
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        command:
        - /resource-group
        env:
        - name: OC_RESOURCE_LABELS
          value: k8s.container.name="manager"
        image: RESOURCE_GROUP_CONTROLLER_IMAGE_NAME
        name: manager
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      - args:
        - --config=/conf/otel-agent-config.yaml
        - --feature-gates=-pkg.translator.prometheus.NormalizeName
        command:
        - /otelcontribcol
        env:
        - name: KUBE_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: KUBE_POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBE_POD_UID
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.uid
        - name: KUBE_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: KUBE_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: KUBE_DEPLOYMENT_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.labels['configsync.gke.io/deployment-name']
        - name: OTEL_RESOURCE_ATTRIBUTES
          value: k8s.pod.name=$(KUBE_POD_NAME),k8s.pod.namespace=$(KUBE_POD_NAMESPACE),k8s.pod.uid=$(KUBE_POD_UID),k8s.pod.ip=$(KUBE_POD_IP),k8s.node.name=$(KUBE_NODE_NAME),k8s.deployment.name=$(KUBE_DEPLOYMENT_NAME)
        image: OTELCONTRIBCOL_IMAGE_NAME
        name: otel-agent
        ports:
        - containerPort: 55678
        - containerPort: 8888
        resources:
          requests:
            cpu: 10m
            memory: 100Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - mountPath: /conf
          name: otel-agent-config-vol
      serviceAccountName: resource-group-sa
      terminationGracePeriodSeconds: 10
      volumes:
      - configMap:
          name: resource-group-otel-agent
        name: otel-agent-config-vol
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault

